### 1. Get the Current User
Returns the information about the current user that is logged in.
* Require Authentication: true
* Request
  * Method: GET
  * URL: /api/users/:userId


### 2. Log In a User
Logs in a current user with valid credentials and returns the current user's
information.
* Require Authentication: false
* Request
  * Method: POST
  * URL: /api/users/login


### 3. Sign Up a User
Creates a new user, logs them in as the current user, and returns the current
user's information.
* Require Authentication: false
* Request
  * Method: POST
  * URL: /api/users/signup


## SPOTS
### 4. Get all Spots
Returns all the spots.
* Require Authentication: false
* Request
  * Method: GET
  * URL: /api/spots



### 5. Get all Spots owned by the Current User
Returns all the spots owned (created) by the current user.
* Require Authentication: true
* Request
  * Method: GET
  * URL: /api/users/:userId/spots



### 6. Get details of a Spot from an id
Returns the details of a spot specified by its id.
* Require Authentication: false
* Request
  * Method: GET
  * URL: /api/spots/:spotId



### 7. Create a Spot
Creates and returns a new spot.
* Require Authentication: true
* Request
  * Method: POST
  * URL: /api/spots


### 8. Add an Image to a Spot based on the Spot's id
Create and return a new image for a spot specified by id.
* Require Authentication: true
* Require proper authorization: Spot must belong to the current user
* Request
  * Method: POST
  * URL: /api/spots/:spotId/images


### 9. Edit a Spot
Updates and returns an existing spot.
* Require Authentication: true
* Require proper authorization: Spot must belong to the current user
* Request
  * Method: PUT
  * URL: /api/spots/:spotId


### 10. Delete a Spot
Deletes an existing spot.
* Require Authentication: true
* Require proper authorization: Spot must belong to the current user
* Request
  * Method: DELETE
  * URL: /api/spots/:spotId


##REVIEWS
### 11. Get all Reviews of the Current User
Returns all the reviews written by the current user.
* Require Authentication: true
* Request
  * Method: GET
  * URL: /api/users/:userId/reviews


### 12. Get all Reviews by a Spot's id
Returns all the reviews that belong to a spot specified by id.
* Require Authentication: false
* Request
  * Method: GET
  * URL: /api/spots/:spotId/reviews


### 13. Create a Review for a Spot based on the Spot's id
Create and return a new review for a spot specified by id.
* Require Authentication: true
* Request
  * Method: POST
  * URL: /api/spots/:spotId/reviews


### 14. Add an Image to a Review based on the Review's id
Create and return a new image for a review specified by id.
* Require Authentication: true
* Require proper authorization: Review must belong to the current user
* Request
  * Method: POST
  * URL: /api/reviews/:reviewId/images


### 15. Edit a Review
Update and return an existing review.
* Require Authentication: true
* Require proper authorization: Review must belong to the current user
* Request
  * Method: PUT
  * URL: /api/reviews/:reviewId


### 16. Delete a Review
Delete an existing review.
* Require Authentication: true
* Require proper authorization: Review must belong to the current user
* Request
  * Method: DELETE
  * URL: /api/reviews/:reviewId


## BOOKINGS
### 17. Get all of the Current User's Bookings
Return all the bookings that the current user has made.
* Require Authentication: true
* Request
  * Method: GET
  * URL: /api/users/:userId/bookings


### 18. Get all Bookings for a Spot based on the Spot's id
Return all the bookings for a spot specified by id.
* Require Authentication: true
* Request
  * Method: GET
  * URL: /api/spots/:spotId/bookings


### 19. Create a Booking from a Spot based on the Spot's id
Create and return a new booking from a spot specified by id.
* Require Authentication: true
* Require proper authorization: Spot must NOT belong to the current user
* Request
  * Method: POST
  * URL: /api/spots/:spotId/bookings


### 20. Edit a Booking
Update and return an existing booking.
* Require Authentication: true
* Require proper authorization: Booking must belong to the current user
* Request
  * Method: PUT
  * URL: /api/bookings/:bookingId


### 21. Delete a Booking
Delete an existing booking.
* Require Authentication: true
* Require proper authorization: Booking must belong to the current user or the
  Spot must belong to the current user
* Request
  * Method: DELETE
  * URL: /api/bookings/:bookingId


## IMAGES
### 22. Delete a Spot Image
Delete an existing image for a Spot.
* Require Authentication: true
* Require proper authorization: Spot must belong to the current user
* Request
  * Method: DELETE
  * URL: /api/spots/:spotId/images/:imageId


### 23. Delete a Review Image
Delete an existing image for a Review.
* Require Authentication: true
* Require proper authorization: Review must belong to the current user
* Request
  * Method: DELETE
  * URL: /api/reviews/:reviewId/images/:imageId


## 24. Add Query Filters to Get All Spots
Return spots filtered by query parameters.
* Require Authentication: false
* Request
  * Method: GET
  * URL: api/spots?page=1&size=20&minLat=35.00&maxLat=40.00&minLng=-125.00&maxLng=-120.00&minPrice=100&maxPrice=500
